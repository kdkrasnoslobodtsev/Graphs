Привет, друг или подруга! Если ты читаешь это, то тебе выпала удача проверить мою работу. В связи с этим хочу оговорить несколько вещей, которые помогут разобраться:

1) Интерефейс программы сделан на английском языке: у меня уже не было времени разбираться с тем, как заставить CLion говорить на русском, поэтом у так. Сразу укажу
основные термины, которые будут часто использоваться:
Vertice - вершина
Edge - ребро
Adjacency matrix - матрица смежности
Incidence matrix - матрица инцидентности
Adjacency list - список смежности
List of edges - список ребер
Half-power of approach - полустепень захода
Half-power of descent - полустепень исхода
Это самые частоиспользуемые, остальное на 99% будет понятно для человека, хоть раз имевшего дело с английским... Если все-таки нет, извини :) 

2) Теперь о том, как именно следует вводить данные
-Первым делом приложение спросит о желании вводить граф из файла с варинтами ответа y/n. Если есть желание вводить граф из файла указывай y, иначе n.
-Далее тебе предложат варианты представления графа (в каком виде ты будешь вводить граф):
--Матрица смежности: попросят ввести размер матрицы (матрица размера n*n, нужно ввести только n), а потом и саму матрицу. Если из вершины i в j есть ребро,
то в матрице в ячейке [i][j] (счет ведется с единицы) должна стоять единица (единица и НИЧЕГО ДРУГОГО! Иначе есть вероятность некорректной работы программы)
При вводе из файла в самом файле требуется указать размер матрицы и саму матрицу
Пример:
3
0 1 0
1 0 1
0 1 0
--Матрица смежности: попросят ввести количество вершин (n), потом количество ребер (m), далее требуется ввести матрицу n*m, где в каждом столбце должны стоять либо две единицы (номера
смежных вершин), либо -1 и 1 (вершины начала и конца ребра)
При вводе из файла в самом файле требуется указать n, m и саму матрицу
Пример:
3
2
1 0
1 1
0 1
--Список смежности: попросят ввести количество вершин, потом для каждой вершины нужно указать количество вершин, смежных с ней, и сами вершины
При вводе из файла требуется указать тоже самое
Пример:
3
1
2
2
1 3
3
2
--Списко ребер: первым делом последует вопрос, ориентирован ли граф с такими же ответами y/n. Если ты ответшь y, то все введенные ребра будут учтены как односторонние, иначе
двусторонние. Далее вводишь пары чисел: начальную и конечную вершину.
Для файла нужно ввести количество вершин, ребер и сами ребра. На вопрос об ориентированности нужно ответить в консоль.
Пример:
n
2
1 2
2 3
Напоминаю, что по условию ты не можешь вводить граф с кратными ребрами или с петлями

3) Теперь по факту что я сделал. У меня реализованы вывод количества степеней или полустпеней захода и исхода вершин; вывод количества ребер; ввод, хранение и вывод графа в 4 основных
представлениях. Еще организован ввод и вывод графа в файл, правила ввода описал выше.
Уточню детали: если выбрать вывод графа, то возникнет вопрос, выводить ли в файл (старый добрый (y/n))
Есть возможность выхода из программы, по интерфейсу будет ясно, что делать
Пордразумевается повтор решения. В конце работы с одним графом задается вопрос, хочешь ли ты выйти (и снова (y/n))
Файл не очищается после окончания работы с одним графом

4) И теперь самое главное. Если ты что-то попробуешь ввести не по тз, то это черевато некорректным поведением программы и все, хана рулю
